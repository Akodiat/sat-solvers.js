// Include the minisat.js file.
// http://stackoverflow.com/a/5809968
var Module = require('./build/boolector.js')

// Testing function.
var solve_string = Module.cwrap('solve_string', 'number', ['string']);
function test(problem, expected) {
  console.log('Trying to solve: ' + problem)
  solve_string(problem, problem.length);
  console.log('Expected: ' + expected);
}

// Tiny testcase.
test('(benchmark bgpd_bgpd_vc75770.smt\n:logic QF_BV\n:extrafuns ((x BitVec[1]))\n:extrafuns ((y BitVec[1]))\n:assumption (= x y))', 'sat');
test('(benchmark bgpd_bgpd_vc75770.smt\n:logic QF_BV\n:extrafuns ((x BitVec[1]))\n:extrafuns ((y BitVec[1]))\n:extrafuns ((z BitVec[1]))\n:assumption (= x y)\n:assumption (= y z)\n:assumption (not (= x z)))', 'unsat');
// Larger testcase
test('(benchmark bgpd_bgpd_vc75770.smt\n  :source {\nBenchmarks generated by the Calysto static checker.  Provided by Domagoj\nBabic.  See http://www.cs.ubc.ca/~babic/index_benchmarks.htm.  Translated using\nSpear Sf2Smt translator.\n\n}\n  :status sat\n  :difficulty { 1 }\n  :category { industrial }\n  :logic QF_BV\n  :extrafuns ((v155383228 BitVec[32]))\n  :extrafuns ((v123355396 BitVec[32]))\n  :extrafuns ((o135329240 BitVec[1]))\n  :extrafuns ((v112166284 BitVec[64]))\n  :extrafuns ((v120278848 BitVec[64]))\n  :extrafuns ((o126362052 BitVec[64]))\n  :extrafuns ((o111864348 BitVec[64]))\n  :extrafuns ((o126831404 BitVec[64]))\n  :extrafuns ((o115291336 BitVec[1]))\n  :extrafuns ((o109592516 BitVec[1]))\n  :extrafuns ((o126395976 BitVec[1]))\n  :extrafuns ((o113736064 BitVec[1]))\n  :extrafuns ((o136580064 BitVec[1]))\n  :extrafuns ((o132551304 BitVec[1]))\n  :extrafuns ((o133445212 BitVec[1]))\n  :extrafuns ((o129788248 BitVec[1]))\n  :extrafuns ((o126242516 BitVec[1]))\n  :extrafuns ((v128577852 BitVec[32]))\n  :extrafuns ((o121580388 BitVec[32]))\n  :extrafuns ((o125050112 BitVec[1]))\n  :extrafuns ((o132528424 BitVec[1]))\n  :extrafuns ((Fresh__0 BitVec[1]))\n  :extrafuns ((Fresh__1 BitVec[1]))\n  :extrafuns ((Fresh__2 BitVec[1]))\n  :extrafuns ((Fresh__3 BitVec[1]))\n  :extrafuns ((Fresh__4 BitVec[1]))\n  :extrafuns ((Fresh__5 BitVec[1]))\n  :extrafuns ((Fresh__6 BitVec[1]))\n  :extrafuns ((Fresh__7 BitVec[1]))\n  :assumption\n(iff (= Fresh__0 bv1[1]) (bvslt v155383228 v123355396))\n  :assumption\n(= o135329240 Fresh__0)\n  :assumption\n(= o126362052 (bvsdiv v112166284 v120278848))\n  :assumption\n(= o111864348 (bvmul o126362052 (extract[63:0] bv5[64])))\n  :assumption\n(= o126831404 (ite (= o135329240 bv1[1]) o111864348 (extract[63:0] bv0[64])))\n  :assumption\n(iff (= Fresh__1 bv1[1]) (bvsle (extract[63:0] bv86400[64]) o126831404))\n  :assumption\n(= o115291336 Fresh__1)\n  :assumption\n(iff (= Fresh__2 bv1[1]) (distinct o126831404  (extract[63:0] bv0[64]) ))\n  :assumption\n(= o109592516 Fresh__2)\n  :assumption\n(iff (= Fresh__3 bv1[1]) (bvsle v123355396 v155383228))\n  :assumption\n(= o126395976 Fresh__3)\n  :assumption\n(= o113736064 (bvand o126395976 (extract[0:0] bv1[64])))\n  :assumption\n(= o136580064 (ite (= o135329240 bv1[1]) (extract[0:0] bv1[64]) o113736064))\n  :assumption\n(= o132551304 (bvand o109592516 o136580064))\n  :assumption\n(= o133445212 (bvand o115291336 o132551304))\n  :assumption\n(iff (= Fresh__4 bv1[1]) (bvslt o126831404 (extract[63:0] bv604800[64])))\n  :assumption\n(= o129788248 Fresh__4)\n  :assumption\n(= o126242516 (bvand o133445212 o129788248))\n  :assumption\n(= o121580388 (ite (= o135329240 bv1[1]) v128577852 (extract[31:0] bv0[64])))\n  :assumption\n(iff (= Fresh__5 bv1[1]) (distinct (extract[31:0] bv0[64])  o121580388 ))\n  :assumption\n(= o125050112 Fresh__5)\n  :assumption\n(iff (= Fresh__6 bv1[1]) (implies (= o126242516 bv1[1]) (= o125050112 bv1[1])))\n  :assumption\n(= o132528424 Fresh__6)\n  :assumption\n(iff (= Fresh__7 bv1[1]) (= (extract[0:0] bv0[64]) o132528424))\n  :assumption\n(= bv1[1] Fresh__7)\n)\n', 'sat')
